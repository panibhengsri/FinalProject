[{"/Users/caryskong/Documents/GitHub/FinalProject/frontend/src/index.js":"1","/Users/caryskong/Documents/GitHub/FinalProject/frontend/src/reportWebVitals.js":"2","/Users/caryskong/Documents/GitHub/FinalProject/frontend/src/components/login.js":"3","/Users/caryskong/Documents/GitHub/FinalProject/frontend/src/components/routes.js":"4","/Users/caryskong/Documents/GitHub/FinalProject/frontend/src/App.js":"5"},{"size":500,"mtime":1607053962936,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1607053962936,"results":"8","hashOfConfig":"7"},{"size":2854,"mtime":1607618406065,"results":"9","hashOfConfig":"7"},{"size":431,"mtime":1607619351708,"results":"10","hashOfConfig":"7"},{"size":255,"mtime":1607619157681,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1e2mk5i",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/Users/caryskong/Documents/GitHub/FinalProject/frontend/src/index.js",[],["25","26"],"/Users/caryskong/Documents/GitHub/FinalProject/frontend/src/reportWebVitals.js",[],"/Users/caryskong/Documents/GitHub/FinalProject/frontend/src/components/login.js",["27","28","29"],"import React from 'react';\nimport GoogleLogin from 'react-google-login';\nimport {\n    BrowserRouter as Router, Route\n} from \"react-router-dom\";\n\nexport class Login extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            loggedIn: false,\n            username: '',\n            password: '',\n            locations: [],\n            user:null\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    onLoginClick = () => {\n        this.setState({loggedIn: true})\n    }\n\n    handleChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        // const userRef = firebase.database().ref('users');\n        const user = {\n            currentUser: this.state.username,\n            currentPassword: this.state.password\n        }\n        // userRef.push(user);\n        this.setState({\n            username: '',\n            password: ''\n        });\n    }\n\n    // login(){\n    //     //provider should be Google Auth Provider\n    //     auth.signInWithPopup(provider)\n    //         .then((result)=>{\n    //             const user = result.user;\n    //             this.setState({\n    //                 user\n    //             });\n    //         });\n    // }\n\n    // logout(){\n    //     auth.signOut()\n    //         .then(()=>{\n    //             this.setState({\n    //                 user:null\n    //             });\n    //         });\n    // }\n\n    render(){\n        return(\n\t\t<div className=\"container\">\n            <form onSubmit={this.handleSubmit}>\n                {this.props.children}\n                <h2>Sign In</h2>\n                <p>If you don't have an account, please sign-in using Google!</p>\n                <input \n                    type=\"text\" \n                    ref=\"username\" \n                    placeholder=\"username\"\n                    onChange={this.handleChange}\n                    value={this.state.username}\n                    required\n                /><br/>\n                <input \n                    type=\"password\" \n                    ref=\"password\" \n                    placeholder=\"password\"\n                    onChange={this.handleChange}\n                    value={this.state.password}\n                    required\n                /><br/>\n                <input type=\"submit\" value=\"login\"/>\n            </form>\n\t\t\t\t\t\t\n\t\t\t\t<GoogleLogin\n                    //!!need OAuth ClientID from Firebase\n                    clientId = ''\n                    buttonText = \"Login\"\n                    onSuccess = {this.responseGoogle}\n                    onFailure = {this.responseGoogle}\n                    cookiePolicy = {'single_host_origin'}\n                />\n\t\t\t\t\t</div>\n        )\n    }\n}\n\nexport default Login;","/Users/caryskong/Documents/GitHub/FinalProject/frontend/src/components/routes.js",["30"],"/Users/caryskong/Documents/GitHub/FinalProject/frontend/src/App.js",["31","32"],"import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/login.js'\nimport routes from './components/routes.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Login></Login>\n    </div>\n  );\n}\n\nexport default App;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":4,"column":22,"nodeType":"39","messageId":"40","endLine":4,"endColumn":28},{"ruleId":"37","severity":1,"message":"41","line":4,"column":30,"nodeType":"39","messageId":"40","endLine":4,"endColumn":35},{"ruleId":"37","severity":1,"message":"42","line":34,"column":15,"nodeType":"39","messageId":"40","endLine":34,"endColumn":19},{"ruleId":"37","severity":1,"message":"43","line":2,"column":17,"nodeType":"39","messageId":"40","endLine":2,"endColumn":27},{"ruleId":"37","severity":1,"message":"44","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"45","line":4,"column":8,"nodeType":"39","messageId":"40","endLine":4,"endColumn":14},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'user' is assigned a value but never used.","'IndexRoute' is defined but never used.","'logo' is defined but never used.","'routes' is defined but never used.","no-global-assign","no-unsafe-negation"]
