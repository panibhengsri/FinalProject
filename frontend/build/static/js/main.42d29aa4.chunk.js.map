{"version":3,"sources":["logo.svg","components/login.js","App.js","reportWebVitals.js","index.js"],"names":["Login","onLoginClick","setState","loggedIn","state","username","password","locations","user","handleChange","bind","handleSubmit","e","this","target","name","value","preventDefault","className","onSubmit","props","children","type","ref","placeholder","onChange","required","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAe,I,+CCuGAA,E,kDAhGX,aAAc,IAAD,8BACT,gBAYJC,aAAe,WACX,EAAKC,SAAS,CAACC,UAAU,KAZzB,EAAKC,MAAQ,CACTD,UAAU,EACVE,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,KAAK,MAET,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVX,E,yDAiBAE,GACTC,KAAKX,SAAL,eACKU,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,U,mCAIrBJ,GACTA,EAAEK,iBAGeJ,KAAKT,MAAMC,SACPQ,KAAKT,MAAME,SAGhCO,KAAKX,SAAS,CACVG,SAAU,GACVC,SAAU,O,+BAyBd,OACN,qBAAKY,UAAU,YAAf,SACU,uBAAMC,SAAUN,KAAKF,aAArB,UACKE,KAAKO,MAAMC,SACZ,yCACA,2FACA,uBACIC,KAAK,OACLC,IAAI,WACJC,YAAY,WACZC,SAAUZ,KAAKJ,aACfO,MAAOH,KAAKT,MAAMC,SAClBqB,UAAQ,IACV,uBACF,uBACIJ,KAAK,WACLC,IAAI,WACJC,YAAY,WACZC,SAAUZ,KAAKJ,aACfO,MAAOH,KAAKT,MAAME,SAClBoB,UAAQ,IACV,uBACF,uBAAOJ,KAAK,SAASN,MAAM,mB,GAjFvBW,IAAMC,WCOXC,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACI,cAAC,EAAD,OCIOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.42d29aa4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\n// import GoogleLogin from 'react-google-login';    // COMMENTED BY JEREMY JUNG\nimport {\n    BrowserRouter as Router, Route\n} from \"react-router-dom\";\n\nclass Login extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            loggedIn: false,\n            username: '',\n            password: '',\n            locations: [],\n            user:null\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    onLoginClick = () => {\n        this.setState({loggedIn: true})\n    }\n\n    handleChange(e){\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        // const userRef = firebase.database().ref('users');\n        const user = {\n            currentUser: this.state.username,\n            currentPassword: this.state.password\n        }\n        // userRef.push(user);\n        this.setState({\n            username: '',\n            password: ''\n        });\n    }\n\n    // login(){\n    //     //provider should be Google Auth Provider\n    //     auth.signInWithPopup(provider)\n    //         .then((result)=>{\n    //             const user = result.user;\n    //             this.setState({\n    //                 user\n    //             });\n    //         });\n    // }\n\n    // logout(){\n    //     auth.signOut()\n    //         .then(()=>{\n    //             this.setState({\n    //                 user:null\n    //             });\n    //         });\n    // }\n\n    render(){\n        return(\n\t\t<div className=\"container\">\n            <form onSubmit={this.handleSubmit}>\n                {this.props.children}\n                <h2>Sign In</h2>\n                <p>If you don't have an account, please sign-in using Google!</p>\n                <input \n                    type=\"text\" \n                    ref=\"username\" \n                    placeholder=\"username\"\n                    onChange={this.handleChange}\n                    value={this.state.username}\n                    required\n                /><br/>\n                <input \n                    type=\"password\" \n                    ref=\"password\" \n                    placeholder=\"password\"\n                    onChange={this.handleChange}\n                    value={this.state.password}\n                    required\n                /><br/>\n                <input type=\"submit\" value=\"login\"/>\n            </form>\n        {/* COMMENTED GOOGLE LOGIN (JEREMY JUNG) */}\n\t\t\t\t{/* <GoogleLogin \n                    //!!need OAuth ClientID from Firebase\n                    clientId = ''\n                    buttonText = \"Login\"\n                    onSuccess = {this.responseGoogle}\n                    onFailure = {this.responseGoogle}\n                    cookiePolicy = {'single_host_origin'}\n                /> */}\n\t\t\t\t\t</div>\n        )\n    }\n}\n\nexport default Login;","import logo from './logo.svg';\nimport './App.css';\nimport Login from './components/login.js'\nimport routes from './components/routes.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Login></Login>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}